#!/usr/bin/env ruby

require "thor"
require "json"
require 'dotenv/load'
require 'active_support/all'
require 'representable'
require "pry"

Dir.glob(File.expand_path("../lib/**/*.rb", __dir__)).sort.each do |file|
  require file
end

class Cli < Thor
  desc "import", "Import contentful export JSON file"
  method_option :contentful_content, type: :string, required: true, desc: "Path to contentful content JSON file"
  method_option :assets_folder, type: :string, required: true, desc: "Path to asset folder"
  def import
    unless File.exist?(options[:contentful_content])
      puts "Error: Contentful content file '#{options[:contentful_content]}' not found."
      exit(1)
    end

    unless Dir.exist?(options[:assets_folder])
      puts "Error: Assets folder '#{options[:assets_folder]}' not found."
      exit(1)
    end

    begin
      contentful_data = JSON.parse(File.read(options[:contentful_content])).deep_transform_keys { |key| key.to_s.underscore }
      $entries_data = contentful_data.fetch("entries")
      $assets_data = contentful_data.fetch("assets")
      $assets_folder = options[:assets_folder]

      EntriesImporter.new.run($entries_data)
    rescue JSON::ParserError => e
      puts "Error parsing contentful content JSON: #{e.message}"
      exit(1)
    end
  end

  desc "reset", "Deletes all content from strapi"
  def reset
    Contentful::Article.reset_strapi!
    Contentful::Category.reset_strapi!
    Contentful::Author.reset_strapi!
    Contentful::Asset.reset_strapi!
  end
end

Cli.start(ARGV)